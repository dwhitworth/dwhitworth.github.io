<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Donovan Whitworth]]></title>
  <link href="http://dwhitworth.github.io/atom.xml" rel="self"/>
  <link href="http://dwhitworth.github.io/"/>
  <updated>2014-02-09T22:27:35-06:00</updated>
  <id>http://dwhitworth.github.io/</id>
  <author>
    <name><![CDATA[Donovan Whitworth]]></name>
    <email><![CDATA[donovan.whitworth@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Y'all looking to score...]]></title>
    <link href="http://dwhitworth.github.io/blog/2014/02/09/yall-looking-to-score-dot-dot-dot/"/>
    <updated>2014-02-09T22:02:43-06:00</updated>
    <id>http://dwhitworth.github.io/blog/2014/02/09/yall-looking-to-score-dot-dot-dot</id>
    <content type="html"><![CDATA[<p>&ldquo;Y&#8217;all looking to score some crack?&rdquo;</p>

<p>That&rsquo;s what was proposed to me and a member of my cohort at the bus stop yesterday. An interesting start to an otherwise awesome weekend.</p>

<!-- more -->


<p>We were going at it pretty hard all week and Saturday. The excercises in class were challenging, but many of the cohort still have yet to finish Friday&rsquo;s assignment, which involved using rSpec &ndash; the tests were pre-written &ndash; to build a Library application in Ruby.</p>

<p>I was one of maybe a handful that finished the project on Friday afternoon, but I don&rsquo;t think it necessarily indicates that I am further along than most &hellip; I just happened to finish. I already received the review from one of our instructors, and he said that I did a decent job, but there are some flaws in my logic that can be shored up.</p>

<p>Here were the requirements for the Library app:</p>

<ul>
<li>A Book should be able to be marked as checked_out</li>
<li>You should be able to check a Book&rsquo;s status (e.g. available or checked out)</li>
<li>You should be able to add new Books to a Library</li>
<li>A Borrower should be able to check out a Book</li>
<li>Checked-out Books should be associated with a Borrower</li>
<li>Borrowers should be able to check Books back in to the Library (when they&rsquo;re finished with them)</li>
<li>A Borrower should not be able to check out more than two Books at any given time</li>
<li>The Library should be able to list available books and borrowed books</li>
</ul>


<p>Here&rsquo;s some of the code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Book</span>
</span><span class='line'>  <span class="kp">attr_reader</span> <span class="ss">:author</span><span class="p">,</span> <span class="ss">:title</span><span class="p">,</span> <span class="ss">:id</span><span class="p">,</span> <span class="ss">:status</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="n">title</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">,</span> <span class="n">author</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">,</span> <span class="nb">id</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@author</span> <span class="o">=</span> <span class="n">author</span>
</span><span class='line'>    <span class="vi">@title</span> <span class="o">=</span> <span class="n">title</span>
</span><span class='line'>    <span class="vi">@id</span> <span class="o">=</span> <span class="nb">id</span>
</span><span class='line'>    <span class="vi">@status</span> <span class="o">=</span> <span class="s1">&#39;available&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">check_out</span>
</span><span class='line'>    <span class="k">if</span> <span class="vi">@status</span> <span class="o">==</span> <span class="s1">&#39;checked_out&#39;</span>
</span><span class='line'>      <span class="kp">false</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="vi">@status</span> <span class="o">=</span> <span class="s1">&#39;checked_out&#39;</span>
</span><span class='line'>      <span class="kp">true</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">check_in</span>
</span><span class='line'>    <span class="vi">@status</span> <span class="o">=</span> <span class="s1">&#39;available&#39;</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Borrower</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:name</span><span class="p">,</span> <span class="ss">:count</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@name</span> <span class="o">=</span> <span class="nb">name</span>
</span><span class='line'>    <span class="vi">@count</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">Library</span>
</span><span class='line'>  <span class="kp">attr_accessor</span> <span class="ss">:available_books</span><span class="p">,</span> <span class="ss">:borrowed_books</span>
</span><span class='line'>  <span class="kp">attr_reader</span> <span class="ss">:books</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">initialize</span><span class="p">(</span><span class="nb">name</span> <span class="o">=</span> <span class="kp">nil</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@books</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>    <span class="vi">@available_books</span> <span class="o">=</span> <span class="o">[]</span>
</span><span class='line'>    <span class="vi">@borrowed_books</span> <span class="o">=</span> <span class="p">{}</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">register_new_book</span><span class="p">(</span><span class="n">title</span><span class="p">,</span> <span class="n">author</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@books</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="no">Book</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">title</span><span class="p">,</span> <span class="n">author</span><span class="p">,</span> <span class="n">books</span><span class="o">.</span><span class="n">count</span><span class="p">))</span>
</span><span class='line'>    <span class="vi">@available_books</span><span class="o">.</span><span class="n">push</span><span class="p">(</span><span class="no">Book</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">title</span><span class="p">,</span> <span class="n">author</span><span class="p">,</span> <span class="n">books</span><span class="o">.</span><span class="n">count</span><span class="p">))</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">check_out_book</span><span class="p">(</span><span class="n">book_id</span><span class="p">,</span> <span class="n">borrower</span><span class="p">)</span>
</span><span class='line'>    <span class="n">borrower</span><span class="o">.</span><span class="n">count</span> <span class="o">+=</span> <span class="mi">1</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">borrower</span><span class="o">.</span><span class="n">count</span> <span class="o">&gt;</span> <span class="mi">2</span>
</span><span class='line'>      <span class="kp">nil</span>
</span><span class='line'>    <span class="k">else</span>
</span><span class='line'>      <span class="k">if</span> <span class="vi">@books</span><span class="o">[</span><span class="n">book_id</span><span class="o">].</span><span class="n">status</span> <span class="o">==</span> <span class="s1">&#39;available&#39;</span>
</span><span class='line'>        <span class="vi">@books</span><span class="o">[</span><span class="n">book_id</span><span class="o">].</span><span class="n">check_out</span>
</span><span class='line'>        <span class="vi">@borrower</span> <span class="o">=</span> <span class="n">borrower</span>
</span><span class='line'>        <span class="vi">@gone</span> <span class="o">=</span> <span class="vi">@available_books</span><span class="o">.</span><span class="n">pop</span><span class="p">(</span><span class="n">book_id</span><span class="p">)</span>
</span><span class='line'>        <span class="c1"># @borrowed_books.push @gone</span>
</span><span class='line'>        <span class="vi">@books</span><span class="o">[</span><span class="n">book_id</span><span class="o">]</span>
</span><span class='line'>      <span class="k">end</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">check_in_book</span><span class="p">(</span><span class="n">book</span><span class="p">)</span>
</span><span class='line'>    <span class="n">book</span><span class="o">.</span><span class="n">check_in</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">def</span> <span class="nf">get_borrower</span><span class="p">(</span><span class="n">book</span><span class="p">)</span>
</span><span class='line'>    <span class="vi">@borrower</span><span class="o">.</span><span class="n">name</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>I used an array to hold the books, and used the array index as the book id &hellip;.. lame. If the Library decided to remove some books, everything would shift down and the id&rsquo;s would change. A hash would have been a better solution and I could use something like <code>@books.find {|book| book.id == book_id}</code> to access the id. I could have used a counter for the book&rsquo;s id and incremented the counter everytime a book was added. Oh well, next time!</p>

<p>I&rsquo;m looking forward to this coming week.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MakerSquare Day 1]]></title>
    <link href="http://dwhitworth.github.io/blog/2014/02/04/makersquare-day-1/"/>
    <updated>2014-02-04T21:09:00-06:00</updated>
    <id>http://dwhitworth.github.io/blog/2014/02/04/makersquare-day-1</id>
    <content type="html"><![CDATA[<p>So, I got through the first day of MakerSquare.</p>

<p>We went through introductions and course structure and an open Q&amp;A with the founders, instructors and a couple of alumni. I have been truly impressed with what the students have been able to create after 10 grueling weeks here.</p>

<!-- more -->


<p>After the introductions, we went on to setting up our dev environments on our individual machines. In addition to making sure we had the basics installed (Sublime Text, iTerm2, etc), it involved setting up some command line tools, virtual machines and other applications to make our dev lives a bit more productive.</p>

<p>Later, we went through a short tutorial on Git and GitHub, and although it was covered in the pre-work and most of it was review, I definitely learned that I have to break some bad habits.</p>

<p>For example, I am using Git for this blog, and when I add files to my repository, I have been using the <code>git add .</code> command&hellip;. Wrong!</p>

<p><code>git add .</code> blindly adds any file in the directory to your commit, so that means it&rsquo;s too easy to add files you didn&rsquo;t want to commit to your repository. It&rsquo;s better to use <code>git add [filename]</code> or even <code>git add -p</code>, which will give you a yes/no confirmation for each file it adds to your commit.</p>

<p>The second half of the day was doing some challenges in Ruby. I found these to be fairly trivial, but good review nonetheless. I imagine tomorrow will be harder.</p>

<p>I&rsquo;ll sleep better tonight &hellip; I hope.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git...]]></title>
    <link href="http://dwhitworth.github.io/blog/2014/02/01/git-dot-dot-dot/"/>
    <updated>2014-02-01T12:09:47-06:00</updated>
    <id>http://dwhitworth.github.io/blog/2014/02/01/git-dot-dot-dot</id>
    <content type="html"><![CDATA[<p><code>git push my arse to Austin!</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Brrr]]></title>
    <link href="http://dwhitworth.github.io/blog/2014/01/23/brrr/"/>
    <updated>2014-01-23T22:25:49-06:00</updated>
    <id>http://dwhitworth.github.io/blog/2014/01/23/brrr</id>
    <content type="html"><![CDATA[<p>Where I am now&hellip;</p>

<!-- more -->


<p><img src="http://dwhitworth.github.io/images/photo-2.png" alt="Weather in LA" /></p>

<p>Where I&rsquo;ll be in two weeks&hellip;
<img src="http://dwhitworth.github.io/images/photo-1.png" alt="Weather in Austin" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello World]]></title>
    <link href="http://dwhitworth.github.io/blog/2014/01/21/hello-world/"/>
    <updated>2014-01-21T22:25:35-06:00</updated>
    <id>http://dwhitworth.github.io/blog/2014/01/21/hello-world</id>
    <content type="html"><![CDATA[<p>In a few days I&rsquo;ll be heading to Austin to attend an immersive, boot-camp style course in full stack Web development called <a href="http://www.themakersquare.com">MakerSquare</a>.</p>

<!-- more -->


<p>I&rsquo;m beyond excited, as we&rsquo;ll be covering some great tools and technologies:</p>

<ul>
<li>Ruby &amp; Ruby on Rails</li>
<li>JavaScript</li>
<li>HTML and CSS</li>
<li>jQuery</li>
<li>Sinatra</li>
<li>backbone.js and riot.js</li>
<li>APIs</li>
<li>SQL (I imagine SQLite and PostgreSQL)</li>
<li>Git</li>
</ul>


<p>and tons more. We&rsquo;ll spend 10+ hours a day, every day, for 10 weeks learning technologies, building projects, networking, participating in hackathons, etc. Hopefuly, the 400+ hours I have spent in self-study and the 800+ hours I&rsquo;ll spend at MakerSquare will have given me enough knowledge to build some cool apps, and allow me to be useful to someone as a professional (junior) software engineer somewhere.</p>

<p>I&rsquo;ve been doing self-study since July and here are some of the resources I have completed in the past 6 months:</p>

<p>Books:</p>

<ul>
<li><em>Learn To Program</em> by Chris Pine</li>
<li><em>CLI The Hard Way</em> by Zed A. Shaw</li>
<li><em>Learn Ruby The Hard Way</em> by Zed A. Shaw</li>
<li><em>Pragmatic Thinking &amp; Learning</em> by Andy Hunt</li>
<li><em>Programming Ruby</em> (The &ldquo;Pickaxe&rdquo;) by Dave Thomas with Chad Fowler and Andy Hunt</li>
<li><em>Practical Object-Oriented Design In Ruby</em> by Sandi Metz</li>
<li><em>Eloquent Javascript</em> by Marijn Haverbeke</li>
<li><em>Eloquent Ruby</em> by Russ Olsen</li>
</ul>


<p>Online Resources:</p>

<p><a href="http://codecademy.com">CodeAcademy</a> &ndash; I&rsquo;ve finished the Web Fundamentals, JavaScript, jQuery and Ruby tracks.</p>

<p><a href="http://codeschool.com">Code School</a> &ndash; Try Ruby, Ruby Bits I and II, Rails for Zombies I and II, JavaScript Road Trip I, II and III, CSS Cross Country, Try Git, Try jQuery.</p>

<p><a href="http://teamtreehouse.com">Team Treehouse</a> &ndash; Earned over 75 achievements including courses on Ruby, Rails, JS, SQL, HTML and CSS</p>

<p><a href="http://rubymonk.org">Ruby Monk</a> &ndash; Finished the Ruby Primer</p>

<p>I&rsquo;ve also gone through a few tutorials on regular expressions, and some code challenge sites such as <a href="http://rubyquiz.com">Ruby Quiz</a> and <a href="http://rubeque.herokuapp.com">Rubeque</a>.</p>

<p>Class starts on February 4 and I plan to spend the next couple of weeks diving into backbone.js a little bit, getting a bit deeper into jQuery and getting through as much of the <a href="http://ruby.railstutorial.org">Rails Tutorial</a> as I can.</p>

<p>I&rsquo;ve been spending almost all of my free time learning these technologies and going through tutorials, but not actually building anything. The school recommends having a blog, so rather than build a blog using Wordpress, Tumblr, Blogger or some other CMS, I thought it would be much hacker-ier to build it in Octopress and push it to Github and have it hosted through Github Pages.</p>

<p>So, here it is &hellip; my first web app &hellip; my blog.</p>
]]></content>
  </entry>
  
</feed>
